scalar Time

"KTP is main object"
type Ktp {
  id : ID!
  nik: String!
  nama: String!
  jenis_kelamin: String!
  tanggal_lahir: Time!
  alamat: String!
  agama: String!
  createdAt : Time!
	updatedAt : Time
}

"Input body for update and input Ktp"
input KtpBody {
  nik: String!
  nama: String!
  jenis_kelamin: String!
  tanggal_lahir: String!
  alamat: String!
  agama: String!
}

"Object that is being paginated"
type PaginationEdgeKtp {
  node : Ktp!
  cursor: String!
}

"Information about pagination"
type PaginationInfo {
  endCursor: String!
  hasNextPage: Boolean!
}

"Result when querying list using graphql"
type PaginationResultKtp {
  totalCount: Int!
  edges: [PaginationEdgeKtp!]!
  pageInfo: PaginationInfo!
}

"Default input pagination"
input Pagination {
  first: Int! # Total item will be loaded
  offset: Int! # Total item will be skipped
  after: ID # Start Cursor
  query: String! # Query string (NIK, Nama)
  sort: [String!]! # Sort by
}

type Query {
  ktp: [Ktp!]!
  paginationKtp(input: Pagination!): PaginationResultKtp!
}

type Mutation {
  createKtp(input: KtpBody!): Ktp!
  deleteKtp(id: ID!) : Boolean!
  editKtp(id: ID!, input: KtpBody!) : Ktp!
}